{{/* A large label for polls' candidates. */}}
{{/* No javascript for now.  There may be _some_. */}}
{{/* .Poll : the Poll in question */}}
{{/* .CandidateID : the Candidate */}}
{{/* .Super : $ of parent template */}}
{{ $pollResult := .Poll.GetResult }}
{{/*{{ $candidateID := .Issue.Index }}*/}}
{{ $candidateID := .CandidateID }}
{{ $pollID := .Poll.ID }}
{{ $pollCandidateResult := ($pollResult.GetCandidate $candidateID) }}
{{ $medianColorWord := "grey" }}
{{ if $pollCandidateResult }}
{{ $medianColorWord = $pollCandidateResult.GetColorWord }}
{{ end }}
{{/*{{ $judgment := nil }}  ???  */}}
{{ $judgment := "" }}
{{ if $.Super.IsSigned }}
{{ $judgment = (.Poll.GetJudgmentOnCandidate $.Super.SignedUser $candidateID) }}
{{ end }}
{{/*{{ $userGrade := nil }}*/}}
{{ $userGrade := -1 }}
{{ if $judgment }}
{{ $userGrade = $judgment.Grade }}
{{ end }}

{{/* Wrapper for the :hover, old school */}}
<div class="ui judgment-wrapper" tabindex="0">

	<div class="ui large label {{ $medianColorWord }}">
		{{/* Oddly enough, this svg requires javascript.  Hmmm… */}}
		{{ svg "octicon-law" 16 }}
		{{ .Poll.Subject }}
		{{ if $pollCandidateResult -}}
			N°{{ $pollCandidateResult.Position }}
		{{- end }}
	</div>

	{{ if $.Super.IsSigned }}
	<div class="judgment-forms">
		{{ range $grade, $icon := .Poll.GetGradationList }}
			<form class="judgment-form {{ if (eq $grade $userGrade) }}selected{{ end }}" action="{{ $.Super.AppSubUrl }}/{{ $.Super.RepoRelPath }}/polls/{{ $pollID }}/judgments" method="post">
				{{ $.Super.CsrfTokenHtml }}
				<input type="hidden" name="redirect" value="{{ $.Super.AppSubUrl }}/{{ $.Super.RepoRelPath }}/issues/{{ $candidateID }}">
				<input type="hidden" name="grade" value="{{ $grade }}">
				<input type="hidden" name="candidate" value="{{ $candidateID }}">
				<input class="emote" type="submit" value="{{ $icon }}">
			</form>
		{{ end }}
	</div>
	{{ end }}

</div>

{{/* Inline styles !  As long as we don't know how to integrate with Gitea, this'll have to do.  */}}
<style>
	.judgment-wrapper {
		display: inline-block;
		/* Otherwise the h1 blocks a portion of the label's hover area */
		position: relative;
		z-index: 1;
	}
	.judgment-wrapper:focus-within .judgment-forms,
	.judgment-wrapper:focus .judgment-forms,
	.judgment-wrapper:hover .judgment-forms {
		display: inline-block;
		left: -9px;
		opacity: 1.0;
	}
	.judgment-forms {
		display: none;
		vertical-align: middle;
		position: relative;
		top: 0;
		left: -90px; /* keep as fallback */
		opacity: 0.0; /* keep as fallback */
		animation: fade_in_judgment_forms 0.4s ease-out;
		/*transition: left 0.4s ease-out 0s, opacity 0.3s ease-out 0s;*/
	}
	/* Since transitions won't play with a change of display, we use animation */
	@keyframes fade_in_judgment_forms {
		0% {
			pointer-events: none;
			opacity: 0;
			left: -150px;
			transform: scale(0.2);
		}
		95% {
			transform: scale(1.0);
		}
		99% {
			pointer-events: none;
		}
		100% {
			pointer-events: initial;
			opacity: 1;
			left: -9px;
		}
	}
	.judgment-form {
		position: relative;
		margin: 0;
		padding: 0;
		display: inline-block;
	}
	.judgment-form input.emote {
		font-size: 1.618em;
		width: 1.818rem;
		height: 1.918rem;
		padding: 0;
		margin: 0;
		border: 0;
		background: none;
		transition: 0.3s filter;
	}
	.judgment-form:not(.selected) input.emote {
		filter: grayscale(1.0);
	}
	.judgment-form.selected:focus-within::after,
	.judgment-form.selected:hover::after {
		color: darkred;
		position: absolute;
		content: "×";
		top: 0.11em;
		left: 0.15em;
		font-size: 2em;
		opacity: 0.8;
		pointer-events: none;
	}
	.judgment-form input.emote:hover,
	.judgment-form input.emote:focus {
		background: none;
		filter: grayscale(0.0);
	}
</style>
